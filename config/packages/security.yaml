security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    #providers:
    #    in_memory: { memory: ~ }
    encoders:
        App\Entity\User: bcrypt
    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: Email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            provider: our_db_provider
            form_login:
                login_path: user_login
                check_path: user_login
                username_parameter: "user_login[Email]"
                #inspecter l'element puis regarder le name
                password_parameter: "user_login[Password]"
            logout:
                path: /logout
                target: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/user2, roles: ROLE_ADMIN }
         - { path: ^/factures/show, roles: ROLE_ADMIN }
         - { path: ^/factures/edit, roles: ROLE_ADMIN }
         - { path: ^/factures/new, roles: ROLE_ADMIN }
         - { path: ^/factures/index, roles: ROLE_ADMIN }
#- { path: ^/factures, roles: ROLE_ADMIN }
 #        - { path: ^/factures, roles: ROLE_ADMIN }
  #       - { path: ^/factures, roles: ROLE_ADMIN }
   #      - { path: ^/factures, roles: ROLE_ADMIN }
         - { path: ^/factures/user/show , roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
